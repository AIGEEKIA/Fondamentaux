# üîß STANDARDS TECHNIQUES - D√âPENDANCES & ARCHITECTURE

## üéØ **OBJECTIF**

Standards techniques, d√©pendances et architecture pour maintenir la coh√©rence technique.

## ‚ö†Ô∏è **R√àGLES DE MODIFICATION - CRITIQUES**

### **AVANT TOUTE MODIFICATION**

- ‚úÖ **V√©rifier les d√©pendances** dans `package.json`
- ‚úÖ **V√©rifier l'utilisation** avec `grep_search`
- ‚úÖ **V√©rifier les imports** dans les fichiers
- ‚úÖ **V√©rifier la documentation** existante
- ‚úÖ **Demander confirmation** si incertain

### **D√âPENDANCES ESSENTIELLES - NE JAMAIS SUPPRIMER**

- `@radix-ui/react-slot` : Utilis√© par shadcn/ui
- `clsx` : Utilis√© dans `lib/utils.ts`
- `tailwind-merge` : Utilis√© dans `lib/utils.ts`
- `class-variance-authority` : Pour les variantes
- `tailwindcss-animate` : Pour les animations

### **COMMANDES DE V√âRIFICATION**

```bash
# V√©rifier une d√©pendance
npm list nom-dependance

# Chercher l'utilisation
grep_search "nom-dependance" --include-pattern "*.{ts,tsx,js,jsx}"

# V√©rifier les imports
grep_search "import.*nom-dependance" --include-pattern "*.{ts,tsx}"

# Tester le build
npm run build
```

### **ARCHITECTURE √Ä RESPECTER**

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   shadcn/ui     ‚îÇ  ‚Üê Syst√®me de composants
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ   Radix UI      ‚îÇ  ‚Üê Composants primitifs accessibles
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ   Utilitaires   ‚îÇ  ‚Üê clsx, tailwind-merge, etc.
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ   Tailwind CSS  ‚îÇ  ‚Üê Framework CSS
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

## üéØ **EXIGENCES TECHNIQUES - MCP CONTEXT 7**

### **PRIORIT√â ABSOLUE**

- ‚úÖ **Privil√©gier MCP Context7** pour toutes les exigences techniques
- ‚úÖ **Consulter les docs officielles** via MCP Context 7
- ‚úÖ **V√©rifier les versions** avec MCP Context 7
- ‚úÖ **Respecter les breaking changes** via MCP Context 7

### **AVANTAGES MCP CONTEXT7**

- **Docs officielles** : Toujours √† jour
- **Versions actuelles** : Pas de risque d'obsolescence
- **Breaking changes** : Alertes automatiques
- **Best practices** : Recommandations officielles
- **S√©curit√©** : Vuln√©rabilit√©s connues

## üéØ **STANDARD UNIVERSEL - MODIFICATION DES COURS**

### **PROCESSUS OBLIGATOIRE POUR TOUT COURS**

#### **1. ANALYSE PR√âLIMINAIRE**

- [ ] **Identifier le cours** √† modifier/mettre √† jour
- [ ] **V√©rifier l'√©tat actuel** contre le template cours-1
- [ ] **D√©terminer les modifications** n√©cessaires
- [ ] **Planifier l'approche** selon les r√®gles √©tablies

#### **2. V√âRIFICATION STRUCTURELLE (OBLIGATOIRE)**

- [ ] **Comparer avec cours-1** : Structure exacte
- [ ] **V√©rifier l'ordre** : Objectifs ‚Üí Analogies ‚Üí D√©finition ‚Üí Exemples ‚Üí Mini-App ‚Üí Quiz ‚Üí Navigation
- [ ] **Contr√¥ler les sections** : 7/7 √©tapes pr√©sentes
- [ ] **Valider les espaces** : `space-y-8` pour quiz, `mb-12` pour sections

#### **3. VALIDATION P√âDAGOGIQUE**

- [ ] **Section "D√©finition Simple"** : Pr√©sente et compl√®te ‚≠ê
- [ ] **Code structurel** : Bout de code obligatoire
- [ ] **Quiz design** : Identique au cours-1
- [ ] **Navigation** : Liens fonctionnels
- [ ] **Coh√©rence** : Titres et descriptions

#### **4. CONTR√îLE DESIGN**

- [ ] **Palette de couleurs** : Respect√©e
- [ ] **Composants UI** : shadcn/ui utilis√©s
- [ ] **Responsive** : Mobile-first design
- [ ] **Animations** : Transitions fluides
- [ ] **Accessibilit√©** : Contrastes et focus

#### **5. V√âRIFICATION TECHNIQUE**

- [ ] **TypeScript** : Aucune erreur de type
- [ ] **Performance** : Pas de re-renders inutiles
- [ ] **Accessibilit√©** : Tests axe-core passent
- [ ] **Structure** : Ordre des sections conforme

### **M√âTRIQUES DE QUALIT√â OBLIGATOIRES**

- **Erreurs TypeScript** : 0 tol√©r√©
- **Performance** : Core Web Vitals > 90
- **Accessibilit√©** : WCAG 2.1 AA
- **Structure** : 100% conforme au template
- **Sections** : 7/7 √©tapes pr√©sentes

### **R√âF√âRENCES OBLIGATOIRES**

- **Template** : `cours-1/page.tsx`
- **Quiz** : Design du cours-1
- **Palette** : Standards d√©finis
- **R√®gles** : `.cursor/rules/`

### **NIVEAUX DE QUALIT√â**

#### **Niveau Acceptable**

- ‚úÖ Structure compl√®te (7/7 √©tapes)
- ‚úÖ Section "D√©finition Simple" pr√©sente
- ‚úÖ Quiz design identique cours-1
- ‚úÖ Navigation fonctionnelle

#### **Niveau Optimal**

- ‚úÖ Toutes les v√©rifications passent
- ‚úÖ Performance optimale
- ‚úÖ Accessibilit√© compl√®te
- ‚úÖ Design parfaitement coh√©rent

---

**Note** : Ces standards techniques compl√®tent les r√®gles essentielles.
description:
globs:
alwaysApply: false

---
