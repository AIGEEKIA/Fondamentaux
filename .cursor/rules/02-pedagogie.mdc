# üìö Standards P√©dagogiques - Formation Interactive

## ‚ö†Ô∏è Disclaimer Important

**ATTENTION :** Le code g√©n√©r√© par IA dans ce projet, notamment pour les applications pratiques et les exemples, est fourni √† titre de **d√©monstration uniquement**. Je ne garantis pas la s√©curit√©, la performance ou la fiabilit√© de ce code. Il doit √™tre test√© et adapt√© avant toute utilisation en production.

## üéØ Structure P√©dagogique Obligatoire

### Les 7 √âtapes de Chaque Cours

#### 1. **En-t√™te de Le√ßon** (Header)

```typescript
// Structure obligatoire
<div className="text-center mb-12">
  <h1 className="text-4xl font-bold text-gray-800 mb-4">
    üì¶ [Titre de la Le√ßon]
  </h1>
  <p className="text-xl text-gray-600 mb-6">[Description engageante]</p>
  <div className="flex justify-center gap-4">
    <div className="flex items-center gap-2 bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
      <BookOpen className="h-4 w-4" />
      [Cat√©gorie]
    </div>
  </div>
</div>
```

#### 2. **Objectifs du Cours** (3 objectifs)

```typescript
// Structure obligatoire avec CheckCircle
<div className="space-y-4">
  <div className="flex items-center gap-3">
    <CheckCircle className="h-5 w-5 text-green-600" />
    <span>[Objectif 1]</span>
  </div>
  <div className="flex items-center gap-3">
    <CheckCircle className="h-5 w-5 text-green-600" />
    <span>[Objectif 2]</span>
  </div>
  <div className="flex items-center gap-3">
    <CheckCircle className="h-5 w-5 text-green-600" />
    <span>[Objectif 3]</span>
  </div>
</div>
```

#### 3. **Analogies Simples** (3 analogies)

```typescript
// Structure obligatoire - 3 analogies c√¥te √† c√¥te
<div className="grid md:grid-cols-3 gap-6">
  <Card className="analogy-card">
    <CardHeader>
      <[Icon] className="h-8 w-8 text-blue-600" />
      <CardTitle>[Analogie 1]</CardTitle>
    </CardHeader>
    <CardContent>
      <p>[Explication de l'analogie]</p>
    </CardContent>
  </Card>
  {/* R√©p√©ter pour 2 autres analogies */}
</div>
```

#### 4. **D√©finition Simple** ‚≠ê OBLIGATOIRE

```typescript
// Structure obligatoire avec code structurel
<Card className="bg-gradient-to-br from-green-500/10 to-emerald-500/10 border-2 border-green-300/50 shadow-xl">
  <CardHeader>
    <div className="flex items-center gap-4">
      <div className="w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-500 rounded-xl flex items-center justify-center shadow-lg">
        <BookOpen className="h-6 w-6 text-white" />
      </div>
      <div>
        <CardTitle className="text-2xl font-bold text-gray-800">
          D√âFINITION SIMPLE
        </CardTitle>
      </div>
    </div>
  </CardHeader>
  <CardContent>
    {/* Explication claire + Bout de code structurel obligatoire */}
    <div className="space-y-4">
      <p>[Explication vulgaris√©e du concept]</p>
      <div className="bg-gray-100 p-4 rounded-lg">
        <pre>
          <code>{`// Code structurel obligatoire
const example = {
  concept: "[Nom du concept]",
  structure: "[Structure de base]"
};`}</code>
        </pre>
      </div>
    </div>
  </CardContent>
</Card>
```

#### 5. **Exemples de Code** (3 langages/outils)

```typescript
// Structure obligatoire - Code c√¥te √† c√¥te
<div className="grid md:grid-cols-3 gap-6">
  <div className="code-example">
    <h3>[Langage/Outils 1]</h3>
    <pre>
      <code>{`// Code [Langage/Outils 1]`}</code>
    </pre>
    <button onClick={() => copyCode(code1)}>Copier</button>
  </div>
  <div className="code-example">
    <h3>[Langage/Outils 2]</h3>
    <pre>
      <code>{`// Code [Langage/Outils 2]`}</code>
    </pre>
    <button onClick={() => copyCode(code2)}>Copier</button>
  </div>
  <div className="code-example">
    <h3>[Langage/Outils 3]</h3>
    <pre>
      <code>{`// Code [Langage/Outils 3]`}</code>
    </pre>
    <button onClick={() => copyCode(code3)}>Copier</button>
  </div>
</div>
```

#### 6. **Mini-Application** (Instructions + Code)

```typescript
// Structure obligatoire
<Card className="bg-gradient-to-br from-blue-500/10 to-indigo-500/10 border-2 border-blue-300/50 shadow-xl">
  <CardHeader>
    <div className="flex items-center gap-4">
      <Play className="h-6 w-6 text-blue-600" />
      <CardTitle>Mini-Application : [Nom]</CardTitle>
    </div>
  </CardHeader>
  <CardContent>
    <div className="space-y-4">
      <p>[Instructions d√©taill√©es]</p>
      <div className="bg-gray-100 p-4 rounded-lg">
        <pre>
          <code>{`// Code ex√©cutable`}</code>
        </pre>
      </div>
    </div>
  </CardContent>
</Card>
```

#### 7. **Quiz Interactifs** (5 quiz)

```typescript
// Structure obligatoire
<Card className="bg-gradient-to-br from-purple-500/10 to-indigo-500/10 border-2 border-purple-300/50 shadow-xl">
  <CardHeader>
    <div className="flex items-center gap-4">
      <Brain className="h-6 w-6 text-purple-600" />
      <CardTitle>Quiz Interactifs</CardTitle>
    </div>
  </CardHeader>
  <CardContent>
    <div className="space-y-4">
      {/* 5 quiz avec feedback imm√©diat */}
      <QuizComponent quiz={quiz1} />
      <QuizComponent quiz={quiz2} />
      {/* ... */}
    </div>
  </CardContent>
</Card>
```

## üé® Standards Visuels

### Gradients par Section

- **Objectifs** : `from-blue-500/10 to-blue-600/10`
- **Analogies** : `from-blue-500/10 to-blue-600/10`
- **D√©finition** : `from-green-500/10 to-emerald-500/10`
- **Exemples** : `from-orange-500/10 to-red-500/10`
- **Mini-app** : `from-blue-500/10 to-indigo-500/10`
- **Quiz** : `from-purple-500/10 to-indigo-500/10`

### Ic√¥nes par Section

- **Objectifs** : `CheckCircle` (vert)
- **Analogies** : Ic√¥nes contextuelles (bleu)
- **D√©finition** : `BookOpen` (vert)
- **Exemples** : `Code` (orange)
- **Mini-app** : `Play` (bleu)
- **Quiz** : `Brain` (violet)

## üìù Contenu P√©dagogique

### R√®gles de R√©daction

- **Tonalit√©** : Bienveillante et encourageante
- **Complexit√©** : Progressive (simple ‚Üí complexe)
- **Exemples** : Concrets et pratiques
- **Analogies** : Relatives √† l'exp√©rience quotidienne
- **Code** : Comment√© et p√©dagogique

### Structure de Contenu

1. **Accroche** : Question ou situation probl√©matique
2. **Explication** : Concept vulgaris√©
3. **Exemples** : Cas concrets
4. **Code** : Impl√©mentation pratique
5. **Quiz** : Validation des acquis

## üß™ Quiz Standards

### Structure d'un Quiz

```typescript
interface Quiz {
  id: string;
  question: string;
  options: string[];
  correctAnswer: number;
  explanation: string;
}
```

### Types de Questions

- **Choix multiple** : 4 options, 1 correcte
- **Vrai/Faux** : 2 options
- **Code** : Identifier le r√©sultat
- **Concept** : D√©finition ou utilisation

### Feedback Imm√©diat

- **Correct** : Vert avec explication
- **Incorrect** : Rouge avec correction
- **Animation** : Transition fluide
- **Score** : Progression visible

## üîÑ Navigation

### Breadcrumb Obligatoire

```typescript
<nav className="mb-8">
  <div className="flex items-center gap-2 text-sm text-gray-600">
    <Link href="/" className="hover:text-blue-600 transition-colors">
      Accueil
    </Link>
    <ChevronRight className="h-4 w-4" />
    <span className="text-blue-600 font-semibold">Cours X : [Titre]</span>
  </div>
</nav>
```

### Navigation entre Cours

```typescript
<div className="flex justify-between mt-8">
  <Link href="/[cours]/cours-X-1" className="nav-button">
    <ChevronLeft className="h-4 w-4" />
    Cours pr√©c√©dent
  </Link>
  <Link href="/[cours]/cours-X+1" className="nav-button">
    Cours suivant
    <ChevronRight className="h-4 w-4" />
  </Link>
</div>
```

## ‚ö†Ô∏è R√®gles Critiques

### Interdictions

- ‚ùå Pas de section manquante
- ‚ùå Pas d'ordre invers√©
- ‚ùå Pas de contenu non p√©dagogique
- ‚ùå Pas de code non comment√©
- ‚ùå Pas de quiz sans feedback

### Obligations

- ‚úÖ Section "D√©finition simple" obligatoire
- ‚úÖ Code structurel dans la d√©finition
- ‚úÖ 3 analogies minimum
- ‚úÖ 5 quiz minimum
- ‚úÖ Navigation compl√®te
- ‚úÖ Responsive design

---

**‚ö†Ô∏è RAPPEL :** Le code g√©n√©r√© par IA est √† titre de d√©monstration uniquement. Testez et adaptez avant utilisation en production.
